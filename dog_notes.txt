Проблемы изложены в соответсвии с критичностью: стр. 8 для посылки API сообщений на Я.Диск требуется авторизация. В конструкторе класса имплементировать получение token по схеме OAuth засылать на вход Client Secret: AgAAAAAJtest_tokenxkUEdew (и необходимо добавить Client ID). Сохранить его в self.token, чтобы потом вставлять в заголовки сообщений. Client Secret будет предан один раз, его не потребуется передавать каждый раз в вызовах в стр. 44,48,56
стр. 47 обращение к элементам списка напрямую по индексу должно быть предварено проверкой того, что там два элемента и случаи когда их меньше и больше.
стр 58, это и все подобные обращения к элементам словаря заменить на get(key), что безопаснее т.к. позволяет задавать дефолт, если значения по ключу не найдено. Соответсвенно во всех обращения по ключу задавать дефолтное значение.
стр 52, заменить единственную тестовую фунцию с несколькими разнородными проверками на несколько разных, проверящих какой то один простой сценарий: а) положительный код ответа на http get при создании папки, тип созданного объекта, сравнение имени созданной папки с ожиданием б) вынести проверку подпород в отдельную параметризованную тестовую функцию с) добавить тест извлекающий из json файл с картинкой и функцию, позволяющую разпознать образ соответствующий собаке на картинке д) на этой основе создать тестовые данные для собак с подпородами и проверять их картинки е) ошибочные случаи: пустые имена пород, подпород, недопустимые символы в именах пород/подпород ж) случай отрицательных кодов ответа, когда порода заведомо не существует и когда подпороды у данной породы не существуют
стр 51, не нужна рандомизация параметров, достаточно представить выборку по разным породам и породам имеющим подпороды плюс ошибочные случаи в названии породы/подпороды: пустая з) недопустимые символы в навании породы/подпороды
во все ассерты добавить печать с выводом значения параметра, который не совпал с ожиданием    
стр. 60 проверка не имеет смысла
стр. 58 там и далее несколько раз вызывается метод json(): конвертировать ответ от сервера в словарь через json() один раз, сохранить в переменную и использовать далее для анализа ключей в ответе
численные константы в стр 47, 62 вынести вверх в именованные константы после url     
стр. 68 вызов get_sub_breeds() излишен: в стр. 60  сохранить список в переменную и использовать её для проверки содержимого и длины
то же самое в стр 62
то же самое в стр 69: items = response.get('_embedded').get('items')
все используемые url вынести вверх в одном месте после импорта для облегчения поиска
стр 40 речь идёт о helper-методе для создания собаки: сделаем его мнемоничным и переименуем в dog
стр. 54 комментарий: "Проверка" ничего не говорит о проверяемом сценарии: оформить docstring с описанием параметров (тоже самое для всех методов и helper-методов) и сценарий в виде шаг/ожидание. Тестовая функция должны содержать описание следующих шагов: создание тестовой папки на Яндекс диск, загрузка туда картинки собаки, получение json содержащих описание породы с картинкой, json с описанием подпород с картинками, проверка полученных параметров в ответе.
