Проблемы изложены в соответсвии с критичностью: стр. 8 для посылки API сообщений требуется ааторизация. В конструкторе класса имплементировать получение token по схеме OAuth засылать на вход Client Secret: AgAAAAAJtest_tokenxkUEdew (и необходимо добавить Client ID). Сохранить его в self.token, чтобы потом вставлять в заголовкии сообщений.
стр. 47 обращение к элементам списка напрямую по индексу должно быть предварено проверкой того, что там два элемента и случаи когда их меньше и больше.
стр 58, это и все подобные обращения к элементам словаря заменить на get(key), что безопаснее т.к. позволяет задавать дефолт, если значения по ключу не найдено. Соответсвенно во всех обращения по ключу задавать дефолтноеизнвение.
стр 52, заменить единственную тестовую фунцию осуществляющую несколько разнородных проверок на несколько разных проверящих какой то один простой сценарий: а) проверка созданной тестовой папки: положительный код ответа на http get для создания папки, тип созданного объекта, проверка имени созданной папки с ожиданием, проверка, что для б) вынести проверку подпород в отдельную параметризованную тестовую функцию с) добавить тест извлекающий из json файл с картинкой и функцию, позволяющую разпознать образ соответсвующий собаке нам картинке д) на этой основе создать тестовые данные для собак с подпородами и проверять их картинки е) ошибочные случаи: пустые имена пород, подпород, недопустимые символы в именах пород/подпород ж) случай отрицательных кодов ответа, когда порода заведомо не существует и когда подпороды у данной породы не существуют
все используемые url вынести вверх в одном месте после импорта для облегчения поиска
стр 40 речь идёт о helper - методе для создания собаки: сделаем его мнемоничным и переименуем в dog
стр 51, нам не нужна рандомизация параметров, достаточно представить выборку по разным породам и породам имеющим подпороды плюс ошибочные случаи: пустая порода, недопустимые символы (должно быть оформлено одельным тест кейсом)
стр. 54 комментарий: "Проверка" ничего не говорит о проверяемом сценарии: оформить docstring с описанием параметров (тоже самое для всех методов и helper-функций) и сценарий в виде шаг/ожидание.Тестовая функция должны содержать описание следующих шагов: создание тестовой папки на Яндекс диск, загрузка туда картинки собаки, получение json содержащих описание породы с картинкой и json с описанием подпород с картинками, проверка полученных параметров
стр. 60 проверка не имеет смысла      
во все ассерты добавить печать выводом значения параметра, который не совпал с одиданием      
чмсленные константы в стр 47, 62 вынести вверх в именованные константы после url     
стр. 68 вызов get_sub_breeds() излишен: надо ввзаать в стр. 60 и сохранить список в переменную. Использовать её для проверки модержимого и длины
то же самое в стр 62
